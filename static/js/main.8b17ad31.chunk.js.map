{"version":3,"sources":["../../node_modules/dequal/dist/index.mjs","../../node_modules/use-deep-compare-effect/dist/use-deep-compare-effect.esm.js","../../src/validations/lib/isEmail.js","../../src/validations/lib/isRequired.js","../../src/validations/lib/min.js","../../src/validations/lib/max.js","../../src/validations/lib/equals.js","../../src/validations/lib/pattern.js","../../src/index.js","App.js","index.js"],"names":["has","Object","prototype","hasOwnProperty","find","iter","tar","key","keys","dequal","foo","bar","ctor","len","tmp","constructor","Date","getTime","RegExp","toString","Array","length","Set","size","Map","get","ArrayBuffer","Uint8Array","DataView","byteLength","getInt8","isView","call","useDeepCompareEffect","callback","dependencies","React.useEffect","value","ref","React.useRef","signalRef","current","React.useMemo","useDeepCompareMemoize","EMAIL_REGEXP","config","validateField","fieldValue","fieldConfig","validatorConfig","validator","validators","configuredValidator","errorMessage","initialState","values","errors","blurred","submitted","validationReducer","state","action","payload","Error","getErrors","name","useValidation","useReducer","dispatch","fieldValues","fieldConfigs","validateFields","type","useMemo","isFormValid","error","submittedErrors","getFormProps","onSubmit","e","presentErrors","showErrors","isInitialFormValid","getFieldProps","fieldName","onChange","onBlur","App","fields","email","isRequired","message","isEmail","password","maxField","max","minField","min","equalField","equals","regexField","pattern","regex","context","console","log","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b17ad31.chunk.js","sourcesContent":["var has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nexport function dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n","import * as React from 'react';\nimport { dequal } from 'dequal';\n\nfunction checkDeps(deps) {\n  if (!deps || !deps.length) {\n    throw new Error('useDeepCompareEffect should not be used with no dependencies. Use React.useEffect instead.');\n  }\n\n  if (deps.every(isPrimitive)) {\n    throw new Error('useDeepCompareEffect should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n  }\n}\n\nfunction isPrimitive(val) {\n  return val == null || /^[sbn]/.test(typeof val);\n}\n/**\n * @param value the value to be memoized (usually a dependency list)\n * @returns a momoized version of the value as long as it remains deeply equal\n */\n\n\nfunction useDeepCompareMemoize(value) {\n  var ref = React.useRef(value);\n  var signalRef = React.useRef(0);\n\n  if (!dequal(value, ref.current)) {\n    ref.current = value;\n    signalRef.current += 1;\n  } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  return React.useMemo(function () {\n    return ref.current;\n  }, [signalRef.current]);\n}\n\nfunction useDeepCompareEffect(callback, dependencies) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkDeps(dependencies);\n  } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  return React.useEffect(callback, useDeepCompareMemoize(dependencies));\n}\n\nfunction useDeepCompareEffectNoCheck(callback, dependencies) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useEffect(callback, useDeepCompareMemoize(dependencies));\n}\n\nexport { useDeepCompareEffect as default, useDeepCompareEffectNoCheck, useDeepCompareMemoize };\n","// This is the same email regex as browsers use when type=\"email\"\nconst EMAIL_REGEXP = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n// eslint-disable-next-line import/no-anonymous-default-export\nconst isEmail = config => value => {\n    return !EMAIL_REGEXP.test(value) ? config.message : null;\n};\n\nexport default isEmail","export default function isRequired(config) {\n    return function (value) {\n        if (value === '') {\n            return config.message;\n        } else {\n            return null;\n        }\n    };\n}","export default function min(config) {\n    return function (value) {\n        if (value.length < config.length) {\n            return config.message;\n        } else return null;\n    }\n}","export default function max(config) {\n    return function (value) {\n        if (value.length > config.length) {\n            return config.message;\n        } else return null;\n    }\n}","export default function equals(config) {\n    return function (value) {\n        if (value !== config.value) {\n            return config.message;\n        } else return null\n    }\n}","export default function pattern(config) {\n    return function (value) {\n        if (!config.regex.test(value)) {\n            return config.message;\n        } else return null;\n    }\n}","import { useReducer, useMemo } from 'react'\nimport useDeepCompareEffect from 'use-deep-compare-effect'\nimport * as validators from './validations/index'\n\nfunction validateField(fieldValue = '', fieldConfig) {\n  for (let validatorName in fieldConfig) {\n    const validatorConfig = fieldConfig[validatorName]\n    const validator = validators[validatorName]\n    const configuredValidator = validator(validatorConfig)\n    const errorMessage = configuredValidator(fieldValue)\n\n    if (errorMessage) {\n      return errorMessage\n    }\n  }\n  return null\n}\n\nfunction validateFields(fieldValues, fieldConfigs) {\n  const errors = {}\n  for (let fieldName in fieldConfigs) {\n    const fieldConfig = fieldConfigs[fieldName]\n    const fieldValue = fieldValues[fieldName]\n\n    errors[fieldName] = validateField(fieldValue, fieldConfig)\n  }\n  return errors\n}\n\nconst initialState = {\n  values: {},\n  errors: {},\n  blurred: {},\n  submitted: false\n}\n\nfunction validationReducer(state, action) {\n  switch (action.type) {\n    case 'change':\n      const values = { ...state.values, ...action.payload }\n      return {\n        ...state,\n        values\n      }\n    case 'submit':\n      return { ...state, submitted: true }\n    case 'validate':\n      return { ...state, errors: action.payload }\n    case 'blur':\n      const blurred = {\n        ...state.blurred,\n        [action.payload]: true\n      }\n      return { ...state, blurred }\n    default:\n      throw new Error('Unknown action type')\n  }\n}\n\nfunction getErrors(state, config) {\n  if (config.showErrors === 'always' || state.submitted) {\n    return state.errors\n  }\n  if (config.showErrors === 'blur') {\n    return Object.entries(state.blurred)\n      .filter(([, blurred]) => blurred)\n      .reduce((acc, [name]) => ({ ...acc, [name]: state.errors[name] }), {})\n  }\n  return state.submitted ? state.errors : {}\n}\n\nexport const useValidation = config => {\n  const [state, dispatch] = useReducer(validationReducer, initialState)\n\n  useDeepCompareEffect(() => {\n    const errors = validateFields(state.values, config.fields)\n    dispatch({ type: 'validate', payload: errors })\n  }, [state.values, config.fields])\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const errors = useMemo(() => getErrors(state, config), [\n    state.errors,\n    state.blurred,\n    state.submitted,\n    config.showErrors\n  ])\n\n  const isFormValid = useMemo(\n    () => Object.values(errors).every(error => error === null),\n    [errors]\n  )\n\n  return {\n    errors,\n    submittedErrors: state.submitted ? state.errors : {},\n    submitted: state.submitted,\n    isFormValid,\n    getFormProps: () => ({\n      onSubmit: e => {\n        e.preventDefault()\n        const presentErrors = getErrors(state, { ...config, showErrors: 'always' })\n        const isInitialFormValid = !!Object.values(presentErrors).every(error => error === null)\n        dispatch({ type: 'submit' })\n        if (config.onSubmit) {\n          config.onSubmit({ ...state, isFormValid, isInitialFormValid })\n        }\n      }\n    }),\n    getFieldProps: fieldName => ({\n      onChange: e => {\n        const { value } = e.target\n        if (!config.fields[fieldName]) {\n          return\n        }\n        dispatch({\n          type: 'change',\n          payload: { [fieldName]: value }\n        })\n      },\n      onBlur: () => {\n        dispatch({ type: 'blur', payload: fieldName })\n      },\n      name: fieldName,\n      value: state.values[fieldName] || ''\n    })\n  }\n}\n","import React from 'react'\nimport { useValidation } from \"react-use-form-validate\"\n\nconst App = () => {\n  let config = {\n    fields: {\n      email: {\n        isRequired: { message: 'Email is Required' },\n        isEmail: { message: 'Please enter a valid Email address' }\n      },\n      password: {\n        isRequired: { message: 'Password is Required' }\n      },\n      maxField: {\n        max: {\n          message: 'Max size exceeded',\n          length: 5\n        }\n      },\n      minField: {\n        min: {\n          message: 'Min size not fulfilled',\n          length: 5\n        }\n      },\n      equalField: {\n        equals: {\n          message: 'Does not match expected value',\n          value: 'React'\n        }\n      },\n      regexField: {\n        pattern: {\n          message: 'You can only enter alphabets in this field',\n          regex: /^[A-Za-z]+$/\n        }\n      }\n    },\n    onSubmit: context => {\n      if (context.isFormValid) {\n        console.log('Form is valid and ready to be submitted')\n      } else {\n        console.log('Form is valid and ready to be submitted')\n      }\n    },\n    // showError: `${formSubmitted ? 'always' : 'blur'}`\n    showErrors: 'blur'\n  }\n\n  const { getFieldProps, getFormProps, errors } = useValidation(config)\n\n  return (\n    <form {...getFormProps()}>\n      <input\n        {...getFieldProps('email')}\n        type='text'\n        placeholder='Email'\n      />\n      {\n        errors.email &&\n        <div>\n          <p>\n            {/* {errors.email ? errors.email : submittedErrors.email} */}\n            {errors.email}\n          </p>\n        </div>\n      }\n\n      <div>\n        <input\n          {...getFieldProps('password')}\n          type='password'\n          placeholder='Password'\n        />\n        {\n          errors.password &&\n          <div>\n            <p>\n              {errors.password}\n            </p>\n          </div>\n        }\n      </div>\n\n      <div>\n        <input\n          {...getFieldProps('maxField')}\n          type='text'\n          placeholder='Max 5 char'\n        />\n        {\n          errors.maxField &&\n          <div>\n            <p>\n              {errors.maxField}\n            </p>\n          </div>\n        }\n      </div>\n\n      <div>\n        <input\n          {...getFieldProps('minField')}\n          type='text'\n          placeholder='min 5 char'\n        />\n        {\n          errors.minField &&\n          <div>\n            <p>\n              {errors.minField}\n            </p>\n          </div>\n        }\n      </div>\n\n      <div>\n        <input\n          {...getFieldProps('equalField')}\n          type='text'\n          placeholder='Enter react'\n        />\n        {\n          errors.equalField &&\n          <div>\n            <p>\n              {errors.equalField}\n            </p>\n          </div>\n        }\n      </div>\n\n      <div>\n        <input\n          {...getFieldProps('regexField')}\n          type='text'\n          placeholder='Enter only alphabets in this field'\n        />\n        {\n          errors.regexField &&\n          <div>\n            <p>\n              {errors.regexField}\n            </p>\n          </div>\n        }\n      </div>\n\n      <div>\n        <button\n          type='submit'\n        >\n          SUBMIT\n        </button>\n      </div>\n\n    </form >\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}